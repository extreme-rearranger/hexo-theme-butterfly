- let comments = theme.comments
- let postWordcount = theme.wordcount.enable && (theme.wordcount.post_wordcount || theme.wordcount.min2read)
#post-info
  each langPrefix, lang in langPrefices
    div(lang-type='relative' language=lang)
      h1.post-title= page.title || _p(langPrefix+'no_title')
        if theme.post_edit.enable
          a.post-edit-link(href=theme.post_edit.url + page.source title=_p(langPrefix+'post.edit') target="_blank")
            i.fas.fa-pencil-alt
        
  #post-meta
    .meta-firstline
      if (theme.post_meta.post.date_type)
        each langPrefix, lang in langPrefices
          span.post-meta-date(lang-type='relative' language=lang)
            if (theme.post_meta.post.date_type === 'both')
              i.far.fa-calendar-plus.post-meta-icon
              span.post-meta-label= _p(langPrefix+'post.created')
              time.post-meta-date-created(datetime=date_xml(page.date) title=_p(langPrefix+'post.created') + ' ' + full_date(page.date, format=config.full_date_format) language=lang)=date(page.date, config.date_format)
              span.post-meta-separator |
              i.fas.fa-history.post-meta-icon
              span.post-meta-label= _p(langPrefix+'post.updated')
              time.post-meta-date-updated(datetime=date_xml(page.updated) title=_p(langPrefix+'post.updated') + ' ' + full_date(page.updated, format=config.full_date_format) language=lang)=date(page.updated, config.date_format)
            else
              - let data_type_update = theme.post_meta.post.date_type === 'updated'
              - let date_type = data_type_update ? 'updated' : 'date'
              - let date_icon = data_type_update ? 'fas fa-history' :'far fa-calendar-plus'
              - let date_title = data_type_update ? _p(langPrefix+'post.updated') : _p(langPrefix+'post.created')
              i.post-meta-icon(class=date_icon)
              span.post-meta-label= date_title
              time(datetime=date_xml(page[date_type]) title=date_title + ' ' + full_date(page[date_type], format=config.full_date_format) language=lang)=date(page[date_type], config.date_format)
      if (postWordcount)
        span.post-meta-separator |
    
    .meta-secondline
      if (postWordcount)
        span.post-meta-wordcount
          if theme.wordcount.post_wordcount
            i.far.fa-file-word.post-meta-icon
            each langPrefix, lang in langPrefices
              span(lang-type='relative' language=lang).post-meta-label= _p(langPrefix+'post.wordcount')
            span.word-count= wordcount(page.content)
        if theme.wordcount.min2read
          span.post-meta-separator |
          span.post-meta-min2read
            i.far.fa-clock.post-meta-icon
            each langPrefix, lang in langPrefices
              span(lang-type='relative' language=lang).post-meta-label= _p(langPrefix+'post.min2read')
            each langPrefix, lang in langPrefices
              //- 참고 : https://www.jkos.org/upload/pdf/JKOS057-04-17.pdf
              span(lang-type='relative' language=lang)= min2read(page.content, {cn: 350, en: 160, ko: 202}) + _p(langPrefix+'post.min2read_unit')
    
      //- for pv and count
      mixin pvBlock(parent_id,parent_class,parent_title)
        span.post-meta-separator |
        span(class=parent_class id=parent_id data-flag-title=page.title)
          i.far.fa-eye.post-meta-icon
          each langPrefix, lang in langPrefices
            span(lang-type='relative' language=lang).post-meta-label=_p(langPrefix+'post.page_pv')
          if block
            block

      mixin otherPV()
        if theme.umami_analytics.enable && theme.umami_analytics.UV_PV.page_pv
          +pvBlock('', '', '')
            span#umamiPV(data-path=url_for(page.path))
              i.fa-solid.fa-spinner.fa-spin
        else if theme.busuanzi.page_pv
          +pvBlock('', 'post-meta-pv-cv', '')
            span#busuanzi_value_page_pv
              i.fa-solid.fa-spinner.fa-spin

      - const commentUse = comments.use && comments.use[0]
      if page.comments !== false && commentUse && !comments.lazyload
        if commentUse === 'Valine' && theme.valine.visitor
          +pvBlock(url_for(page.path), 'leancloud_visitors', page.title)
            span.leancloud-visitors-count
              i.fa-solid.fa-spinner.fa-spin
        else if commentUse === 'Waline' && theme.waline.pageview
          +pvBlock('', '', '')
            span.waline-pageview-count(data-path=url_for(page.path))
              i.fa-solid.fa-spinner.fa-spin
        else if commentUse === 'Twikoo' && theme.twikoo.visitor
          +pvBlock('', '', '')
            span#twikoo_visitors
              i.fa-solid.fa-spinner.fa-spin
        else if commentUse === 'Artalk' && theme.artalk.visitor
          +pvBlock('', '', '')
            span#ArtalkPV
              i.fa-solid.fa-spinner.fa-spin
        else
          +otherPV()
      else
        +otherPV()

      if comments.count && !comments.lazyload && page.comments !== false && comments.use
        - var whichCount = comments.use[0]

        mixin countBlock
          span.post-meta-separator |
          span.post-meta-commentcount
            i.far.fa-comments.post-meta-icon
            each langPrefix, lang in langPrefices
              span(lang-type='relative' language=lang).post-meta-label= _p(langPrefix+'post.comments') + ':'
            if block
              block

        case whichCount
          when 'Disqus'
            +countBlock
              a.disqus-comment-count(href=full_url_for(page.path) + '#post-comment')
                i.fa-solid.fa-spinner.fa-spin
          when 'Disqusjs'
            +countBlock
              a.disqusjs-comment-count(href=full_url_for(page.path) + '#post-comment')
                i.fa-solid.fa-spinner.fa-spin
          when 'Valine'
            +countBlock
              a(href=url_for(page.path) + '#post-comment' itemprop="discussionUrl")
                span.valine-comment-count(data-xid=url_for(page.path) itemprop="commentCount")
                  i.fa-solid.fa-spinner.fa-spin
          when 'Waline'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span.waline-comment-count(data-path=url_for(page.path))
                  i.fa-solid.fa-spinner.fa-spin
          when 'Gitalk'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span.gitalk-comment-count
                  i.fa-solid.fa-spinner.fa-spin
          when 'Twikoo'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span#twikoo-count
                  i.fa-solid.fa-spinner.fa-spin
          when 'Facebook Comments'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span.fb-comments-count(data-href=urlNoIndex())
          when 'Remark42'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span.remark42__counter(data-url=urlNoIndex())
                  i.fa-solid.fa-spinner.fa-spin
          when 'Artalk'
            +countBlock
              a(href=url_for(page.path) + '#post-comment')
                span#ArtalkCount
                  i.fa-solid.fa-spinner.fa-spin

    .meta-thirdline
      if (theme.post_meta.post.categories && page.categories.data.length > 0)
        each langPrefix, lang in langPrefices
          span.post-meta-categories(lang-type='relative' language=lang)
            i.far.fa-folder-closed.post-meta-icon
            span.post-meta-label= _p(langPrefix + 'page.category')
        - let category_hier = list_categories(page.categories, {show_count: false, add_icon: true})
        !=category_hier
        if page.sticky_categories.length > 0
          div.category-list.sticky
            each item, index in page.sticky_categories
              - let item_path = page.categories.data.find((category) => category.name === item).path
              a.category-list-link(href=url_for_lang(item_path) lang-type='relative') #[=item]
              if (index < page.sticky_categories.length - 1)
                span #[='•']
            if (theme.post_meta.post.tags && page.tags.length > 0)
              span.post-meta-separator |
    
    .tag_share
      if (theme.post_meta.post.tags && page.tags.length > 0)
        each langPrefix, lang in langPrefices
          span.post-meta-tags(lang-type='relative' language=lang)
            i.fas.fa-hashtag.post-meta-icon
            span.post-meta-label= _p(langPrefix + 'page.tag')
        .post-meta__tag-list
          each item, index in page.tags.data
            if page.sticky_tags.includes(item.name)
              a.sticky(href=url_for_lang(item_path) lang-type='relative' language=lang).post-meta__tags #[=item.name]
              span.tag-separator.sticky #[='•']
            else
              a.not-sticky(href=url_for_lang(item.path) lang-type='relative' language=lang).post-meta__tags #[=item.name]
              span.tag-separator.not-sticky #[='•']
      