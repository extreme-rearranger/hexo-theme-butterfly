mixin indexPostUI()
  - const indexLayout = theme.index_layout
  - const masonryLayoutClass = (indexLayout === 6 || indexLayout === 7) ? 'masonry' : ''

  - let langPrefixDefault
  if is_default_language(page_language())
    - langPrefixDefault = `${display_languages()[0]}.`
  else
    - langPrefixDefault = ''

  if globalPageType === 'post'
    - post_data = page.posts.data.sort((a, b) => (b.sticky || 0) - (a.sticky || 0));
  else if globalPageType === 'tag'
    - post_data = page.posts.data.sort((a, b) => (b.sticky_tags.includes(page.tag) || 0) - (a.sticky_tags.includes(page.tag) || 0));
  else if globalPageType === 'category'
    - post_data = page.posts.data.sort((a, b) => (b.sticky_categories.includes(page.category) || 0) - (a.sticky_categories.includes(page.category) || 0));
  else
    - post_data = page.posts.data

  #recent-posts.recent-posts.nc(class=masonryLayoutClass)
    .recent-post-items
      each article, index in post_data
        .recent-post-item
          - const link = article.link || article.path
          - const title = article.title || _p(langPrefixDefault+'no_title')
          - const leftOrRight = indexLayout === 3 ? (index % 2 === 0 ? 'left' : 'right') : (indexLayout === 2 ? 'right' : '')
          - const post_cover = article.cover
          - const no_cover = article.cover === false || !theme.cover.index_enable ? 'no-cover' : ''

          if post_cover && theme.cover.index_enable
            .post-cover(class=leftOrRight)
              a(href=url_for(link) title=title)
                if article.cover_type === 'img'
                  img.post-bg(src=url_for(post_cover) onerror=`this.onerror=null;this.src='${url_for(theme.error_img.post_page)}'` alt=title)
                else
                  div.post-bg(style=`background: ${post_cover}`)
          .recent-post-info(class=no_cover)
            a.article-title(href=url_for(link) title=title)
              if (globalPageType === 'home' && (article.top || article.sticky > 0)) || (globalPageType === 'tag' && article.sticky_tags.includes(page.tag)) || (globalPageType === 'category' && article.sticky_categories.includes(page.category))
                i.fas.fa-thumbtack.sticky
              = title
            .article-meta-wrap
              if theme.post_meta.page.date_type
                span.post-meta-lang
                  if is_default_language(article.lang)
                    - post_langs = display_languages()
                  else
                    - post_langs = [article.lang]
                  each lang in post_langs
                    i.fontagon-icons(class=`ft-icon-${lang}-box`)
                each langPrefix, lang in langPrefices
                  span.post-meta-date(lang-type='relative' language=lang)
                    span.article-meta-separator |
                    if theme.post_meta.page.date_type === 'both'
                      i.fas.fa-calendar-plus
                      span.article-meta-label=_p(langPrefix+'post.created')
                      time.post-meta-date-created(datetime=date_xml(article.date) title=_p(langPrefix+'post.created') + ' ' + full_date(article.date, format=config.full_date_format) language=lang)= date(article.date, config.date_format)
                      span.article-meta-separator |
                      i.fas.fa-history
                      span.article-meta-label=_p(langPrefix+'post.updated')
                      time.post-meta-date-updated(datetime=date_xml(article.updated) title=_p(langPrefix+'post.updated') + ' ' + full_date(article.updated, format=config.full_date_format) language=lang)= date(article.updated, config.date_format)
                    else
                      - const data_type_updated = theme.post_meta.page.date_type === 'updated'
                      - const date_type = data_type_updated ? 'updated' : 'date'
                      - const date_icon = data_type_updated ? 'fas fa-history' : 'fas fa-calendar-plus'
                      - const date_title = data_type_updated ? _p(langPrefix+'post.updated') : _p(langPrefix+'post.created')
                      - const date_class = data_type_updated ? 'post-meta-date-updated' : 'post-meta-date-created'
                      i(class=date_icon)
                      span.article-meta-label= date_title
                      time(class=date_class datetime=date_xml(article[date_type]) title=date_title + ' ' + full_date(article[date_type], format=config.full_date_format) language=lang)= date(article[date_type], config.date_format)
              if (theme.post_meta.page.categories && article.categories.data.length > 0 && article.sticky_categories)
                span.article-meta.categories
                  span.article-meta-separator |
                  i.fas.fa-folder-open
                  each item, index in article.sticky_categories
                    - let item_path = article.categories.data.find((category) => category.name === item).path
                    if is_default_language(article.lang)
                      a(href=url_for_lang(item_path) lang-type='relative').article-meta__categories #[=item]
                    else
                      a(href=url_for_lang(article.lang+'/'+item_path) lang-type='absolute').article-meta__categories #[=item]
                    if (index < article.sticky_categories.length - 1)
                      span.article-meta-link #[='•']
              if (theme.post_meta.page.tags && article.tags.data.length > 0 && article.sticky_tags)
                span.article-meta.tags
                  span.article-meta-separator |
                  i.fas.fa-tags
                  each item, index in article.sticky_tags 
                    - let item_path = article.tags.data.find((tag) => tag.name === item).path
                    if is_default_language(article.lang)
                      a(href=url_for_lang(item_path) lang-type='relative').article-meta__tags #[=item]
                    else
                      a(href=url_for_lang(article.lang+'/'+item_path) lang-type='absolute').article-meta__tags #[=item]
                    if (index < article.sticky_tags.length - 1)
                      span.article-meta-link #[='•']

              mixin countBlockInIndex
                - needLoadCountJs = true
                span.article-meta
                  span.article-meta-separator |
                  i.fas.fa-comments
                  if block
                    block
                  each langPrefix, lang in langPrefices
                    span(lang-type='relative' language=lang).article-meta-label= ' ' + _p(langPrefix+'card_post_count')

              if theme.comments.card_post_count && theme.comments.use
                case theme.comments.use[0]
                  when 'Disqus'
                  when 'Disqusjs'
                    +countBlockInIndex
                      a.disqus-count(href=full_url_for(link) + '#post-comment')
                        i.fa-solid.fa-spinner.fa-spin
                  when 'Valine'
                    +countBlockInIndex
                      a(href=url_for(link) + '#post-comment')
                        span.valine-comment-count(data-xid=url_for(link))
                          i.fa-solid.fa-spinner.fa-spin
                  when 'Waline'
                    +countBlockInIndex
                      a(href=url_for(link) + '#post-comment')
                        span.waline-comment-count(data-path=url_for(link))
                          i.fa-solid.fa-spinner.fa-spin
                  when 'Twikoo'
                    +countBlockInIndex
                      a.twikoo-count(href=url_for(link) + '#post-comment')
                        i.fa-solid.fa-spinner.fa-spin
                  when 'Facebook Comments'
                    +countBlockInIndex
                      a(href=url_for(link) + '#post-comment')
                        span.fb-comments-count(data-href=urlNoIndex(article.permalink))
                  when 'Remark42'
                    +countBlockInIndex
                      a(href=url_for(link) + '#post-comment')
                        span.remark42__counter(data-url=urlNoIndex(article.permalink))
                          i.fa-solid.fa-spinner.fa-spin
                  when 'Artalk'
                    +countBlockInIndex
                      a(href=url_for(link) + '#post-comment')
                        span.artalk-count(data-page-key=url_for(link))
                          i.fa-solid.fa-spinner.fa-spin

            //- Display the article introduction on homepage
            - const content = postDesc(article)
            if content
              .content!=content

        if theme.ad && theme.ad.index
          if (index + 1) % 3 === 0
            .recent-post-item.ads-wrap!= theme.ad.index

    include ../pagination.pug